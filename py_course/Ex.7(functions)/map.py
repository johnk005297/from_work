#
'''
    Подвиг 3. Вводится таблица целых чисел. Используя функцию map и генератор списков, преобразуйте список строк lst_in (см. листинг) в двумерный список с именем lst2D, содержащий целые числа. 
'''
import sys

# Option 1
def option3_1():
    # считывание списка из входного потока
    lst_in = list(map(str.strip, sys.stdin.readlines()))
    lst2D = list(list(map(int, x.split())) for x in lst_in)


# Option 2
def option3_2():
    lst_in = list(map(str.strip, sys.stdin.readlines()))
    lst2D = [*map(lambda x: [*map(int, x.split())], lst_in)]


# Option 3
def option3_3():
    lst_in = list(map(str.strip, sys.stdin.readlines()))
    lst2D = [*map(lambda x: [int(i) for i in x.split()], lst_in)]



'''
    Подвиг 4. На вход программы поступает строка в формате:
    ключ_1=значение_1 ключ_2=значение_2 ... ключ_N=значение_N
    Необходимо с помощью функции map преобразовать ее в кортеж tp вида:
    tp = (('ключ_1', 'значение_1'), ('ключ_2', 'значение_2'), ..., ('ключ_N', 'значение_N'))

'''

def option4_1():
    s_lst = ['house=дом', 'car=машина', 'men=человек', 'tree=дерево']
    tp = tuple(tuple(map(str, x.split('='))) for x in s_lst)


def option4_2():
    s_lst = ['house=дом', 'car=машина', 'men=человек', 'tree=дерево']
    tp = tuple(map(lambda x: tuple(x.split('=')), s_lst))


def option4_3():
    s_lst = ['house=дом', 'car=машина', 'men=человек', 'tree=дерево']
    tp = tuple(map(tuple, [i.split('=') for i in s_lst]))


'''
    Подвиг 5. (Для учебных целей). Вводится строка. 
    Необходимо в ней заменить кириллические символы на соответствующие латинские обозначения (без учета регистра букв), а все остальные символы - на символ дефиса (-). 
    Для этого в программе определен словарь (см. листинг). Используя его, запишите функцию map, которая бы выдавала преобразованные фрагменты для входной строки. 
    На основе этой функции сформируйте строку, состоящую из преобразованных фрагментов (фрагменты в строке должны идти друг за другом без пробелов). Отобразите результат на экране.
'''

def option5_1():
    t = {'ё': 'yo', 'а': 'a', 'б': 'b', 'в': 'v', 'г': 'g', 'д': 'd', 'е': 'e', 'ж': 'zh',
     'з': 'z', 'и': 'i', 'й': 'y', 'к': 'k', 'л': 'l', 'м': 'm', 'н': 'n', 'о': 'o', 'п': 'p',
     'р': 'r', 'с': 's', 'т': 't', 'у': 'u', 'ф': 'f', 'х': 'h', 'ц': 'c', 'ч': 'ch', 'ш': 'sh',
     'щ': 'shch', 'ъ': '', 'ы': 'y', 'ь': '', 'э': 'e', 'ю': 'yu', 'я': 'ya'}

    inp = input().lower()
    chars = list(map(lambda x: t[x] if x in t else '-', inp))
    print(''.join(chars))


'''
    Подвиг 6. Вводятся названия городов в одну строчку через пробел. Необходимо определить функцию map, которая бы возвращала названия городов только длиной более 5 символов.
    Вместо остальных названий - строку с дефисом ("-"). Сформировать список из полученных значений и отобразить его на экране в одну строчку через пробел.
'''

def option6_1():
    # input = Москва Уфа Вологда Тула Владивосток Хабаровск
    cities = input().split()
    print(*map(lambda x: x if len(x)>5 else '-', cities))